server { 
  listen 443 ssl http2; 
  server_name [domain name]; 

  # SSL 
  ssl_certificate /etc/letsencrypt/live/[domain name]/fullchain.pem; 
  ssl_certificate_key /etc/letsencrypt/live/[domain name]/privkey.pem; 


  # SSL Settings 
  ## 
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2; 
  ssl_prefer_server_ciphers on; 
  ssl_dhparam /etc/ssl/certs/dhparam.pem; 
ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS !MEDIUM"; 
  ssl_session_timeout 1d; 
  ssl_session_cache shared:SSL:50m; 
  ssl_stapling on; 
  ssl_stapling_verify on; 
  add_header Strict-Transport-Security max-age=15768000; 
 
    location ~ /.well-known { 
                allow all; 
        } 

  location / { 
  proxy_pass                          http://127.0.0.1:[your rocketchat port]; 
  proxy_set_header  Host              $http_host;   # required for docker client's sake 
  proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP 
  proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for; 
  proxy_set_header  X-Forwarded-Proto $scheme; 
  proxy_read_timeout                  900; 
  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";
  proxy_set_header X-Forwarded-Host $host;
  proxy_set_header X-Nginx-Proxy true;
  proxy_redirect off;
} 

} 
server { 
    listen 80; 
    server_name [domain name]; 
    return 301 https://$host$request_uri; 
} 
